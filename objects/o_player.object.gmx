<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_mario_big</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>p_player</parentName>
  <maskName>s_mask_player_big</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INIT
//adjustable variables
acel = 0.1;
dcel = 0.2;
acel_j = 0.1;
dcel_j = 0.05;
max_walk = 1;
max_run = 2;
max_sprint = 3;
jumpstrength = -6.5;

//system
SLEEP = 0;
key_left = vk_left;
key_right = vk_right;
key_down = vk_down;
key_A = ord('Z');
key_B = ord('X');

//local system
_xscale = 1;
xspeed = 0;
free_left = 1;
free_right = 1;
duck = 0;
run_power = 0;
sprint = 0;
msm_gv = 0;
msm_vs = 0;
hurt = 0;
flash = 0;
shoot = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stop shooting
if (shoot &lt;&gt; 0)
{
    shoot = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///STOP hurting
hurt = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animations
scr_player_poses();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///change mask
if (duck == 1) || (health &lt; 1)
{
    mask_index = s_mask_player;
}
else
{
    mask_index = s_mask_player_big;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///STEP
if (SLEEP == 0)
{
    event_user(14); //MAIN PHYSICS
}
else
{
    gravity = 0;
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="p_qblock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jump when hit by a bouncing blk
if (other.vspeed &lt; 0) &amp;&amp; (other.y &gt; y+8)
{
    y = other.y-16;
    vspeed = -5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_solidtop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///land on platform
if (vspeed &gt;= 0) &amp;&amp; (y &lt; (other.y-11)+(vspeed*0.5))
{
    if (gravity &lt;&gt; 0)
    {
        gravity = 0;
    }
    vspeed = 0;
    y = other.y-16;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///render me
//MAIM
if (flash &lt;= 1)
{
    draw_sprite_ext(sprite_index,-1,x,round(y),_xscale,1,0,image_blend,image_alpha);
}

//hurt flash code
if (hurt &lt;&gt; 0)
{
    flash += 1;
    if (flash &gt;= 4)
    {
        flash = 0;
    }
}
else
{
    flash = 0;;
}

//DEBUG
draw_set_color($7777FF);
//draw_text(view_xview,view_yview,'x - '+string(x));
draw_set_color($FFFFFF);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprint system code
//add power
if (abs(xspeed) &gt; max_walk) &amp;&amp; (keyboard_check(key_B))
{
    run_power = 1;
}
//lose power
else if (run_power &gt; 0)
{
    run_power -= 2;
}
//keep power above 0
if (run_power &lt; 0)
{
    run_power = 0;
}
//stop sprint
if (run_power &lt;= 32) &amp;&amp; !(keyboard_check(key_B))
{
    sprint = 0;
}
//reach to the max
if (run_power &gt;= 60)
{
    run_power = 60;
    sprint = 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Y physics
//gravity
if !(collision_rectangle(bbox_right,bbox_bottom,bbox_left,bbox_bottom+1,o_solidtop,0,0))
{
    gravity = 0.35;
}

//limit falling speed
if (vspeed &gt; 8)
{
    vspeed = 8;
}

//jump
if (keyboard_check_pressed(key_A))
&amp;&amp; (gravity == 0)
{
    vspeed = jumpstrength-(abs(xspeed)*0.5);
    if (health &gt;= 1)
    {
        sound_ps(snd_jump,2,0);
    }
    else
    {
        sound_ps(snd_jump_mini,2,0);
    }
}

//Makes the player fall while it's jumping and the player releases the 'jump' key.
if (keyboard_check_released(key_A))
&amp;&amp; (gravity &lt;&gt; 0)
{
    vspeed += -0.1-(vspeed/2.4);
}

//bump on solid object
if (collision_line(bbox_left+3,bbox_top-1,bbox_right-4,bbox_top-1,o_solid,1,0)) &amp;&amp; (vspeed &lt; 0)
{
    var _top_col, _yyy;
    _top_col = collision_line(bbox_left+3,bbox_top-1,bbox_right-4,bbox_top-1,o_solid,1,0);
    _yyy = bbox_top-y;
    y = (_top_col.y+(16*_top_col.image_yscale))-_yyy;
    instance_create(x,bbox_top-4,o_block_bump);
    sound_ps(snd_bump,2,0);
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///X physics

//collision check
//free right
if (collision_rectangle(bbox_right+1+xspeed,bbox_bottom-(1+abs(xspeed)),bbox_right+1,bbox_top+(4+abs(vspeed)),o_solid,1,0))
{
    free_right = 0;
    if (collision_rectangle(bbox_right+1+xspeed,bbox_bottom-(1+abs(xspeed)),bbox_right+1,bbox_top+(4+abs(vspeed)),o_solid,1,0))
    &amp;&amp; !(collision_line(bbox_left+3,bbox_top+6,bbox_right-4,bbox_top+6,o_solid,1,0))
    {
        var _ot;
        _ot = collision_rectangle(bbox_right+1+xspeed,bbox_bottom-(1+abs(xspeed)),bbox_right+1,bbox_top+(4+abs(vspeed)),o_solid,1,0);
        x = _ot.x-5;
    }
    if (xspeed &gt; 0)
    {
        xspeed = 0;
        sprint = 0;
    }
}
else
{
    free_right = 1;
}
//free left
if (collision_rectangle(bbox_left+xspeed,bbox_bottom-(1+abs(xspeed)),bbox_left,bbox_top+(4+abs(vspeed)),o_solid,1,0))
{
    free_left = 0;
    if (collision_rectangle(bbox_left+xspeed,bbox_bottom-(1+abs(xspeed)),bbox_left,bbox_top+(4+abs(vspeed)),o_solid,1,0))
    &amp;&amp; !(collision_line(bbox_left+3,bbox_top+6,bbox_right-4,bbox_top+6,o_solid,1,0))
    {
        var _otl;
        _otl = collision_rectangle(bbox_left+xspeed,bbox_bottom-(1+abs(xspeed)),bbox_left,bbox_top+(4+abs(vspeed)),o_solid,1,0);
        x = (_otl.x+(_otl.image_xscale*16))+5;
    }
    if (xspeed &lt; 0)
    {
        xspeed = 0;
        sprint = 0;
    }
}
else
{
    free_left = 1;
}

//set the target speed
var _target_speed;
if (sprint == 0)
{
    if (keyboard_check(key_B))
    {
        _target_speed = max_run;
    }
    else
    {
        _target_speed = max_walk;
    }
}
else
{
    _target_speed = max_sprint;
}


//movement
if (keyboard_check(key_left)) &amp;&amp; !(keyboard_check(key_right))
{
    _xscale = -1;
    if (duck == 0) &amp;&amp; (xspeed &gt; -_target_speed)
    {
        if (free_left == 1)
        {
            if (gravity == 0)
            {
                if !(instance_exists(o_slippery))
                {
                    xspeed -= acel;
                }
                else
                {
                    if (xspeed &lt;= 0)
                    {
                        xspeed -= acel;
                    }
                    else
                    {
                        xspeed -= acel*0.5;
                    }
                }
            }
            else
            {
                xspeed -= acel_j;
            }
        }
    }
    else if (free_left == 1)
    {
        if (gravity &lt;&gt; 0) &amp;&amp; (xspeed &gt; -_target_speed)
        {
            xspeed -= acel_j;
        }
        else
        {
            event_user(13);
        }
    }
}
else if (keyboard_check(key_right)) &amp;&amp; !(keyboard_check(key_left))
{
    _xscale = 1;
    if (duck == 0) &amp;&amp; (xspeed &lt; _target_speed)
    {
        if (free_right == 1)
        {
            if (gravity == 0)
            {
                if !(instance_exists(o_slippery))
                {
                    xspeed += acel;
                }
                else
                {
                    if (xspeed &gt;= 0)
                    {
                        xspeed += acel;
                    }
                    else
                    {
                        xspeed += acel*0.5;
                    }
                }
            }
            else
            {
                xspeed += acel_j;
            }
        }
    }
    else if (free_right == 1)
    {
        if (gravity &lt;&gt; 0) &amp;&amp; (xspeed &lt; _target_speed)
        {
            xspeed += acel_j;
        }
        else
        {
            event_user(13);
        }
    }
}
else
{
    event_user(13);
}


//limit the current speed
if (abs(xspeed) &gt; _target_speed)
{
    var _ssign;
    _ssign = sign(xspeed);
    if (xspeed &gt; _target_speed*_ssign)
    {
        xspeed -= acel;
    }
    else if (xspeed &lt; _target_speed*_ssign)
    {
        xspeed += acel;
    }
    else
    {
        xspeed = _target_speed*_ssign;
    }
}

//GO!!!
repeat (abs(round(xspeed)))
{
    x += sign(xspeed);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Other actions (duck, fire, etc)
//duck
if (health &gt;= 1)
{
    if (keyboard_check(key_down))
    {
        if (gravity == 0)
        {
            duck = 1;
            sprint = 0;
            run_power = 0;
        }
    }
    else if (gravity == 0)
    {
        duck = 0;
    }
}
else
{
    duck = 0;
}

//throw fireball
if (global.powerup == 1)
&amp;&amp; (keyboard_check_pressed(key_B))
&amp;&amp; (duck == 0)
&amp;&amp; (instance_number(o_fireball) &lt; 2)
{
    shoot = 1;
    //alarm[1] = 3;
    var _fire;
    _fire = instance_create(x+(_xscale*6),y,o_fireball);
    _fire.hspeed = _xscale*3;
    _fire.vspeed = 2;
    sound_ps(snd_fireball,1,0);
}

//throw bomb
if (global.powerup == 2)
&amp;&amp; (keyboard_check_pressed(key_B))
&amp;&amp; (duck == 0)
&amp;&amp; (instance_number(o_bomb) &lt; 2)
{
    shoot = 1;
    //alarm[1] = 3;
    var _fire;
    _fire = instance_create(x+(_xscale*4),y-8,o_bomb);
    _fire.hspeed = _xscale*3;
    _fire.vspeed = 2;
    sound_ps(snd_bomb_toss,1,0);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Unstuck
if (collision_point(x,bbox_top+6,o_solid,1,0))
&amp;&amp; !(collision_point(x,bbox_bottom-4,o_solid,1,0))
{
    x += 1;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEAD
//death by lack of HP
if (health &lt;= -1)
{
    instance_create(x,y,o_player_dead);
    instance_destroy();
}

//death by falling out
if (y &gt; room_height+32)
{
    instance_create(x,y,o_player_dead);
    instance_destroy();
}

//death by wall glitch
if (collision_point(x,bbox_top+6,o_solid,1,0))
&amp;&amp; (collision_point(x,bbox_bottom-4,o_solid,1,0))
{
    instance_create(x,y,o_player_dead);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stay in room
if (x &lt;= 0)
{
    x = 0;
    if (xspeed &lt; 0)
    {
        xspeed = 0;
    }
}

if (x &gt;= room_width)
{
    x = room_width;
    if (xspeed &gt; 0)
    {
        xspeed = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SLOWDOWN CODE
if (gravity == 0)
{
    if !(instance_exists(o_slippery))
    {
        if (xspeed &gt;= dcel)
        {
            xspeed -= dcel;
        }
        else if (xspeed &lt;= -dcel)
        {
            xspeed += dcel;
        }
        else
        {
            xspeed = 0;
        }
    }
    else
    {
        if (xspeed &gt;= dcel*0.25)
        {
            xspeed -= dcel*0.25;
        }
        else if (xspeed &lt;= -dcel*0.25)
        {
            xspeed += dcel*0.25;
        }
        else
        {
            xspeed = 0;
        }
    }
}
else
{
    if (xspeed &gt;= dcel_j)
    {
        xspeed -= dcel_j;
    }
    else if (xspeed &lt;= -dcel_j)
    {
        xspeed += dcel_j;
    }
    else
    {
        xspeed = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SLEEP toggle
if (SLEEP == 0)
{
    mem_gv = gravity;
    mem_vs = vspeed;
    gravity = 0;
    vspeed = 0;
    SLEEP = 1;
}
else if (SLEEP == 1)
{
    SLEEP = 0;
    gravity = mem_gv;
    vspeed = mem_vs;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Take damage
if (hurt == 0) &amp;&amp; !(instance_exists(o_player_transform))
{
    if (global.powerup == 0)
    {
        if (health &gt; 1)
        {
            sound_ps(snd_stun,1,0);
            hurt = 1;
            health -= 1;
            xspeed = _xscale*(-3)
            if (vspeed &gt; -5)
            {
                vspeed = -5;
            }
            alarm[0] = 120;
        }
        else if (health == 1)
        {
            hurt = 1;
            sound_ps(snd_hurt,1,0);
            var _growani;
            _growani = instance_create(x,y,o_player_transform);
            _growani.kind = 1;
            with (_growani) event_user(0);
            health = 0;
            alarm[0] = 168;
        }
        else
        {
            health = -1;
        }
    }
    else
    {
        sound_ps(snd_stun,1,0);
        hurt = 1;
        xspeed = _xscale*(-3)
        if (vspeed &gt; -5)
        {
            vspeed = -5;
        }
        alarm[0] = 120;
        var _ow;
        _ow = instance_create(x,y,o_powerup_lose);
        _ow.image_single = global.powerup;
        global.powerup = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///get draw code
event_user(15);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="89">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEBUG
//stop_music();
//room_goto(rm_bonus);
//health = 2;
//global.powerup = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SUICIDE
instance_create(x,y,o_player_dead);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
