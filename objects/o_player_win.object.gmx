<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_mario_win</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>p_player</parentName>
  <maskName>s_mask_player</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
gravity = 0.35;
xspeed = 2;
free_right = 1;
target_speed = 2;
diff = 0.5;

stop_music();
audio_play_sound(mus_levelwin,0,0);

//dont touch these (bug fix purpose)
sprint = 0;
duck = 0;
shoot = 0;

//animation
image_speed = 0;
scr_player_poses();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animations &amp; Mask
//animation
scr_player_poses();

//mask
if (health &lt; 1)
{
    mask_index = s_mask_player;
}
else
{
    mask_index = s_mask_player_big;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Y physics
//gravity
if !(collision_rectangle(bbox_right,bbox_bottom,bbox_left,bbox_bottom+1,o_solidtop,0,0)) &amp;&amp; (x &lt;= room_width)
{
    gravity = 0.35;
}

//limit falling speed
if (vspeed &gt; 8)
{
    vspeed = 8;
}

//bump on solid object
if (collision_line(bbox_left+3,bbox_top-1,bbox_right-4,bbox_top-1,o_solid,1,0)) &amp;&amp; (vspeed &lt; 0)
{
    var _top_col, _yyy;
    _top_col = collision_line(bbox_left+3,bbox_top-1,bbox_right-4,bbox_top-1,o_solid,1,0);
    _yyy = bbox_top-y;
    y = (_top_col.y+(16*_top_col.image_yscale))-_yyy;
    instance_create(x,bbox_top-4,o_block_bump);
    sound_ps(snd_bump,2,0);
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///X physics

//collision check
//free right
if (collision_rectangle(bbox_right+1+xspeed,bbox_bottom-(1+abs(xspeed)),bbox_right+1,bbox_top+(4+abs(vspeed)),o_solid,1,0))
{
    free_right = 0;
    if (collision_rectangle(bbox_right+1+xspeed,bbox_bottom-(1+abs(xspeed)),bbox_right+1,bbox_top+(4+abs(vspeed)),o_solid,1,0))
    &amp;&amp; !(collision_line(bbox_left+3,bbox_top+6,bbox_right-4,bbox_top+6,o_solid,1,0))
    {
        var _ot;
        _ot = collision_rectangle(bbox_right+1+xspeed,bbox_bottom-(1+abs(xspeed)),bbox_right+1,bbox_top+(4+abs(vspeed)),o_solid,1,0);
        x = _ot.x-5;
    }
    if (xspeed &gt; 0)
    {
        xspeed = 0;
    }
}
else
{
    free_right = 1;
}

//limit to target speed
if (xspeed &lt;&gt; target_speed) &amp;&amp; (free_right == 1)
{
    if (xspeed &lt; target_speed)
    {
        xspeed += diff;
    }
    else if (xspeed &gt; target_speed) &amp;&amp; (gravity == 0)
    {
        xspeed -= diff;
    }
    else if (gravity == 0)
    {
        xspeed = target_speed;
    }
}

//GO!!!
repeat (abs(round(xspeed)))
{
    x += sign(xspeed);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///exit room
if (x &gt; room_width+32) &amp;&amp; !(audio_is_playing(mus_levelwin))
{
    if (global.stars &gt;= 100)
    {
        global.stars -= 100;
        room_goto(rm_bonus);
    }
    else
    {
        room_goto(rm_world1_load);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_jmp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TEST: bounce
if (gravity == 0)
{
    vspeed = other.jump;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_solidtop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///land on platform
if (vspeed &gt;= 0) &amp;&amp; (y &lt; other.y-6)
{
    if (gravity &lt;&gt; 0)
    {
        gravity = 0;
    }
    vspeed = 0;
    y = other.y-16;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///render me and hud
//me
draw_sprite_ext(sprite_index,-1,x,round(y),1,1,0,image_blend,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///get draw code
event_user(15);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
