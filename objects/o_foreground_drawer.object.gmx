<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INIT
depth = -9999;
//This ONLY works with foregrounds that are not looped vertically and it does not apply on background x &amp; y scaling

//FG -- Foreground or not
//FGI -- The "background" it uses
//FGW -- Width of the "background"
//FGH -- The horizontal speed of the foreground
//FGX -- The X position of the foreground
//FGY -- The Y position of the foreground
//FGB -- The color blending of the foreground

Wview = 255;//CHANGE THIS IF THE VIEW SIZE (minus 1 pixel) IS MODIFIED

//get each of the foregrounds by checking every single background
var B;
for (B = 0; B &lt;= 7; B += 1)
{
    //get the info if it's background
    if (background_foreground[B] == 1)
    {
        FG[B] = 1;
        FGI[B] = background_index[B];
        FGW[B] = background_width[B];
        FGX[B] = background_x[B];
        FGY[B] = background_y[B];
        background_visible[B] = 0;
        alarm[0] = 1;//GM8 creation code prority delay bug fix
    }
    //ignore if the background is not set to foreground
    else
    {
        FG[B] = 0;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Delay bug fix
var B;
for (B = 0; B &lt;= 7; B += 1)
{
    if (FG[B] == 1)
    {
        FGH[B] = background_hspeed[B];
        FGA[B] = background_alpha[B];
        FGB[B] = background_blend[B];
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move the foreground
var B;
for (B = 0; B &lt;= 7; B += 1)
{
    if (FG[B] == 1)
    {
        //move the foreground
        FGX[B] += FGH[B];
        
        //reset the position for looping
        if (FGX[B] &gt;= FGW[B]) || (FGX[B] &lt;= -(FGW[B]))
        {
            FGX[B] = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw the foreground
var B;
for (B = 0; B &lt;= 7; B += 1)
{
    if (FG[B] == 1)
    {
        var _width, _reps, R, _mid;
        _width = FGW[B];
        _reps[B] = (round(room_width/FGW[B]))*2;
        for (R = 0; R &lt;= _reps[B]; R += 1)
        {
            _mid = FGW[B]*(_reps[B]*0.5);
            draw_background_ext(FGI[B],0+((round(FGX[B])+(R*FGW[B]))-_mid),view_yview[0]+round(FGY[B]),1,1,0,FGB[B],FGA[B]);
        }
        //draw_set_color($0000FF); //DEBUG PURPOSE
        //draw_text(view_xview[0],view_yview[0]+(8+(B*16)),"reps"+string(B)+": "+string(_reps[B]));
        //draw_text(view_xview[0],view_yview[0]+(16+(B*16)),"x"+string(B)+": "+string(FGX[B]));
        //draw_set_color($FFFFFF);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
