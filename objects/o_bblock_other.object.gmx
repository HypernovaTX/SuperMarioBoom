<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_block_roulett</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
image_speed = 0.1;
image_index = irandom(2);
_sp = 1;
used = 0;
donezo = 0;
yspeed = 0;
yoffset = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///start moving (too lazy, hard coded!)
if (y == 48)
{
    if (x == 160) || (x == 208)
    {
        hspeed = _sp;
    }
    if (x == 256)
    {
        vspeed = _sp
    }
}
if (y == 96)
{
    if (x == 160)
    {
        vspeed = -_sp
    }
    if (x == 256)
    {
        vspeed = _sp
    }
}
if (y == 144)
{
    if (x == 256) || (x == 208)
    {
        hspeed = -_sp;
    }
    if (x == 160)
    {
        vspeed = -_sp
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///bounce back
yspeed = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move
if (donezo == 0) &amp;&amp; (used &lt;= 1)
{
    if (x &gt;= 256) &amp;&amp; (hspeed &gt; 0)
    {
        hspeed = 0;
        vspeed = _sp;
        x = 256;
    }
    if (x &lt;= 160) &amp;&amp; (hspeed &lt; 0)
    {
        hspeed = 0;
        vspeed = -_sp;
        x = 160;
    }
    if (y &gt;= 144) &amp;&amp; (vspeed &gt; 0)
    {
        vspeed = 0;
        hspeed = -_sp;
        y = 144;
    }
    if (y &lt;= 48) &amp;&amp; (vspeed &lt; 0)
    {
        vspeed = 0;
        hspeed = _sp;
        y = 48;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///STOP
//keep me stopped
if (used == 3)
{
    hspeed = 0;
    vspeed = 0;
    move_snap(16,16);
}

//stop
if (used == 2)
{
    if (y == 48)
    {
        if (x == 160)
        {
            hspeed = 0;
            vspeed = 0;
            x = 160;
            used = 3;
        }
        if (x == 208)
        {
            hspeed = 0;
            vspeed = 0;
            x = 208;
            used = 3;
        }
        if (x == 256)
        {
            hspeed = 0;
            vspeed = 0;
            x = 256;
            used = 3;
        }
        y = 48;
    }
    if (y == 96)
    {
        if (x == 160)
        {
            hspeed = 0;
            vspeed = 0;
            x = 160;
            used = 3;
        }
        if (x == 256)
        {
            hspeed = 0;
            vspeed = 0;
            x = 256;
            used = 3;
        }
        y = 96;
    }
    if (y == 144)
    {
        if (x == 160)
        {
            hspeed = 0;
            vspeed = 0;
            x = 160;
            used = 3;
        }
        if (x == 208)
        {
            hspeed = 0;
            vspeed = 0;
            x = 208;
            used = 3;
        }
        if (x == 256)
        {
            hspeed = 0;
            vspeed = 0;
            x = 256;
            used = 3;
        }
        y = 144;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hit by player
if (used == 0)
{
    if (instance_exists(o_player))
    {
        if (collision_rectangle(bbox_left,bbox_bottom+1,bbox_right,bbox_bottom-4,o_player,1,0))
        &amp;&amp; (o_player.bbox_top &gt; y+8)
        &amp;&amp; (o_player.vspeed &lt; 0)
        {
            var _yyy;
            _yyy = o_player.y-o_player.bbox_top;
            sound_ps(snd_bump,3,0);
            sound_ps(snd_bblock_hit,2,0);
            o_player.vspeed = 0;
            o_player.y = (self.y+16)+_yyy;
            
            used = 1;
            image_speed = 0;
            image_index = round(image_index);
            
            yoffset = 0;
            yspeed = -2;
            alarm[0] = 4;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///block hit physics
yoffset += yspeed;

///make sure stay after being bumped
if (yspeed &gt; 0)
&amp;&amp; (yoffset &gt;= 0)
{
    yspeed = 0;
    yoffset = 0;
}

if (yspeed == 0)
&amp;&amp; (yoffset &lt;&gt; 0)
{
    yoffset = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW
draw_sprite(sprite_index,-1,round(x),round(y)+yoffset);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///get draw code
event_user(15);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="84">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEBUG PURPOSE
//image_index = o_bblock_center.image_index;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
