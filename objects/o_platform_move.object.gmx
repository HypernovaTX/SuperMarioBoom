<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_platform_move</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_solidtop</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If player is on this moving platform
if (instance_exists(o_player))
{
    if (collision_rectangle(bbox_left,bbox_top-5,bbox_right,bbox_top+4,o_player,0,0))
    &amp;&amp; (o_player.y &lt; (y-11)+(o_player.vspeed*0.5))
    &amp;&amp; (o_player.gravity == 0)
    {
        //Snap Mario vertically
        o_player.y = ceil(bbox_top-16);
    
        //Move Mario horizontally if there is no solid in his way
        if ((hspeed &gt; 0) &amp;&amp; !(collision_rectangle(o_player.bbox_right+hspeed,o_player.bbox_top,o_player.bbox_right+hspeed,o_player.bbox_bottom-1,o_solid,0,0)))
        || ((hspeed &lt; 0) &amp;&amp; !(collision_rectangle(o_player.bbox_left+hspeed,o_player.bbox_top,o_player.bbox_left+hspeed,o_player.bbox_bottom-1,o_solid,0,0)))
        {
            o_player.x += hspeed;
        }
    }
}

if (instance_exists(o_player_transform))
{
    if (collision_rectangle(bbox_left,bbox_top-5,bbox_right,bbox_top+4,o_player_transform,0,0))
    &amp;&amp; (o_player_transform.y &lt; (y-11)+(o_player_transform.vspeed*0.5))
    &amp;&amp; (o_player_transform.gravity == 0)
    {
        //Snap Mario vertically
        o_player_transform.y = ceil(bbox_top-16);
    
        //Move Mario horizontally if there is no solid in his way
        if ((hspeed &gt; 0) &amp;&amp; !(collision_rectangle(o_player_transform.bbox_right+hspeed,o_player_transform.bbox_top,o_player_transform.bbox_right+hspeed,o_player_transform.bbox_bottom-1,o_solid,0,0)))
        || ((hspeed &lt; 0) &amp;&amp; !(collision_rectangle(o_player_transform.bbox_left+hspeed,o_player_transform.bbox_top,o_player_transform.bbox_left+hspeed,o_player_transform.bbox_bottom-1,o_solid,0,0)))
        {
            o_player_transform.x += hspeed;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move enemies/items
var i, ene;
for (i = 0; i &lt;= 10; i ++)
{
    switch (i)
    {
        case(0): ene = o_goomba; break;
        case(1): ene = o_goomba_turn; break;
        case(2): ene = o_koopa; break;
        case(3): ene = o_koopa_turn; break;
        case(4): ene = o_spiny; break;
        case(5): ene = o_spiny_turn; break;
        case(6): ene = o_koopa_shell; break;
        case(7): ene = o_mushroom; break;
        case(8): ene = o_enemy_squished; break;
        case(9): ene = o_fireflower; break;
        case(10): ene = o_bombflower; break;
    }
    if (collision_rectangle(bbox_left,bbox_top-5-vspeed,bbox_right,bbox_top+4,ene,1,1))
    {
        var ENEMY;
        ENEMY = collision_rectangle(bbox_left,bbox_top-5-vspeed,bbox_right,bbox_top+4,ene,1,1);
        if (ENEMY &lt;&gt; noone)
        {
            if (ENEMY.y &lt; (y-11)+(ENEMY.vspeed*0.5))
            &amp;&amp; (ENEMY.gravity == 0)
            {
                //Snap enemy/item vertically
                ENEMY.y = ceil(bbox_top-16);
                
                //Move emeny/item horizontally if there is no solid in his way
                if ((hspeed &gt; 0) &amp;&amp; !(collision_rectangle(ENEMY.bbox_right+hspeed,ENEMY.bbox_top,ENEMY.bbox_right+hspeed,ENEMY.bbox_bottom-1,o_solid,0,0)))
                || ((hspeed &lt; 0) &amp;&amp; !(collision_rectangle(ENEMY.bbox_left+hspeed,ENEMY.bbox_top,ENEMY.bbox_left+hspeed,ENEMY.bbox_bottom-1,o_solid,0,0)))
                {
                    ENEMY.x += hspeed;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///arrow collisions
//up
if (collision_rectangle(bbox_left,bbox_top,bbox_right,y+16,o_up,1,1))
{
    vspeed -= 0.0324;
}

//down
if (collision_rectangle(bbox_left,bbox_top,bbox_right,y+16,o_down,1,1))
{
    vspeed += 0.0324;
}

//left
if (collision_rectangle(bbox_left,bbox_top-8,bbox_right,y+16,o_left,1,1))
{
    hspeed -= 0.0324;
}

//right
if (collision_rectangle(bbox_left,bbox_top-8,bbox_right,y+16,o_right,1,1))
{
    hspeed += 0.0324;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW
draw_sprite(sprite_index,-1,round(x),round(y));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///get draw code
event_user(15);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
